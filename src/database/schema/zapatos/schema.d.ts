/*
** DON'T EDIT THIS FILE **
It's been generated by Zapatos, and is liable to be overwritten

Zapatos: https://jawj.github.io/zapatos/
Copyright (C) 2020 - 2023 George MacKerron
Released under the MIT licence: see LICENCE file
*/

declare module 'zapatos/schema' {
  import type * as db from 'zapatos/db'

  // got a type error on schemaVersionCanary below? update by running `npx zapatos`
  export interface schemaVersionCanary extends db.SchemaVersionCanary {
    version: 104
  }

  /* === schema: voidpm === */

  export namespace voidpm {
    /* --- enums --- */
    /* (none) */

    /* --- tables --- */

    /**
     * **voidpm.contributor**
     * - Table in database
     */
    export namespace contributor {
      export type Table = 'voidpm.contributor'
      export interface Selectable {
        /**
         * **voidpm.contributor.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: Date
        /**
         * **voidpm.contributor.ext_gh_user_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gh_user_id: number | null
        /**
         * **voidpm.contributor.ext_gitlab_author_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gitlab_author_id: number | null
        /**
         * **voidpm.contributor.ext_slack_member_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_slack_member_id: string | null
        /**
         * **voidpm.contributor.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.contributor_id_seq'::regclass)`
         */
        id: number
        /**
         * **voidpm.contributor.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number
        /**
         * **voidpm.contributor.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: Date
        /**
         * **voidpm.contributor.username**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        username: string
      }
      export interface JSONSelectable {
        /**
         * **voidpm.contributor.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: db.TimestampTzString
        /**
         * **voidpm.contributor.ext_gh_user_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gh_user_id: number | null
        /**
         * **voidpm.contributor.ext_gitlab_author_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gitlab_author_id: number | null
        /**
         * **voidpm.contributor.ext_slack_member_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_slack_member_id: string | null
        /**
         * **voidpm.contributor.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.contributor_id_seq'::regclass)`
         */
        id: number
        /**
         * **voidpm.contributor.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number
        /**
         * **voidpm.contributor.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: db.TimestampTzString
        /**
         * **voidpm.contributor.username**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        username: string
      }
      export interface Whereable {
        /**
         * **voidpm.contributor.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
        /**
         * **voidpm.contributor.ext_gh_user_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gh_user_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.contributor.ext_gitlab_author_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gitlab_author_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.contributor.ext_slack_member_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_slack_member_id?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.contributor.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.contributor_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.contributor.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.contributor.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
        /**
         * **voidpm.contributor.username**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        username?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
      }
      export interface Insertable {
        /**
         * **voidpm.contributor.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.contributor.ext_gh_user_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gh_user_id?:
          | number
          | db.Parameter<number>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.contributor.ext_gitlab_author_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gitlab_author_id?:
          | number
          | db.Parameter<number>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.contributor.ext_slack_member_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_slack_member_id?:
          | string
          | db.Parameter<string>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.contributor.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.contributor_id_seq'::regclass)`
         */
        id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment
        /**
         * **voidpm.contributor.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number | db.Parameter<number> | db.SQLFragment
        /**
         * **voidpm.contributor.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.contributor.username**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        username: string | db.Parameter<string> | db.SQLFragment
      }
      export interface Updatable {
        /**
         * **voidpm.contributor.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.contributor.ext_gh_user_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gh_user_id?:
          | number
          | db.Parameter<number>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | number
              | db.Parameter<number>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.contributor.ext_gitlab_author_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gitlab_author_id?:
          | number
          | db.Parameter<number>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | number
              | db.Parameter<number>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.contributor.ext_slack_member_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_slack_member_id?:
          | string
          | db.Parameter<string>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | string
              | db.Parameter<string>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.contributor.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.contributor_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.DefaultType | db.SQLFragment
            >
        /**
         * **voidpm.contributor.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>
        /**
         * **voidpm.contributor.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.contributor.username**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        username?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
      }
      export type UniqueIndex =
        | 'contributor_ext_gh_user_id_key'
        | 'contributor_ext_gitlab_author_id_key'
        | 'contributor_pkey'
      export type Column = keyof Selectable
      export type OnlyCols<T extends readonly Column[]> = Pick<
        Selectable,
        T[number]
      >
      export type SQLExpression =
        | Table
        | db.ColumnNames<Updatable | (keyof Updatable)[]>
        | db.ColumnValues<Updatable>
        | Whereable
        | Column
        | db.ParentColumn
        | db.GenericSQLExpression
      export type SQL = SQLExpression | SQLExpression[]
    }

    /**
     * **voidpm.organization**
     * - Table in database
     */
    export namespace organization {
      export type Table = 'voidpm.organization'
      export interface Selectable {
        /**
         * **voidpm.organization.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: Date
        /**
         * **voidpm.organization.ext_clerk_user_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_clerk_user_id: string
        /**
         * **voidpm.organization.ext_stripe_customer_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_stripe_customer_id: string | null
        /**
         * **voidpm.organization.has_unlimited_usage**
         * - `bool` in database
         * - Nullable, default: `false`
         */
        has_unlimited_usage: boolean | null
        /**
         * **voidpm.organization.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.organization_id_seq'::regclass)`
         */
        id: number
        /**
         * **voidpm.organization.is_over_plan_pr_limit**
         * - `bool` in database
         * - Nullable, default: `false`
         */
        is_over_plan_pr_limit: boolean | null
        /**
         * **voidpm.organization.send_pull_request_summaries_day**
         * - `text` in database
         * - `NOT NULL`, default: `'7'::text`
         */
        send_pull_request_summaries_day: string
        /**
         * **voidpm.organization.send_pull_request_summaries_enabled**
         * - `bool` in database
         * - `NOT NULL`, default: `true`
         */
        send_pull_request_summaries_enabled: boolean
        /**
         * **voidpm.organization.send_pull_request_summaries_interval**
         * - `text` in database
         * - `NOT NULL`, default: `'weekly'::text`
         */
        send_pull_request_summaries_interval: string
        /**
         * **voidpm.organization.send_pull_request_summaries_time**
         * - `text` in database
         * - `NOT NULL`, default: `'22:00'::text`
         */
        send_pull_request_summaries_time: string
        /**
         * **voidpm.organization.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: Date
      }
      export interface JSONSelectable {
        /**
         * **voidpm.organization.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: db.TimestampTzString
        /**
         * **voidpm.organization.ext_clerk_user_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_clerk_user_id: string
        /**
         * **voidpm.organization.ext_stripe_customer_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_stripe_customer_id: string | null
        /**
         * **voidpm.organization.has_unlimited_usage**
         * - `bool` in database
         * - Nullable, default: `false`
         */
        has_unlimited_usage: boolean | null
        /**
         * **voidpm.organization.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.organization_id_seq'::regclass)`
         */
        id: number
        /**
         * **voidpm.organization.is_over_plan_pr_limit**
         * - `bool` in database
         * - Nullable, default: `false`
         */
        is_over_plan_pr_limit: boolean | null
        /**
         * **voidpm.organization.send_pull_request_summaries_day**
         * - `text` in database
         * - `NOT NULL`, default: `'7'::text`
         */
        send_pull_request_summaries_day: string
        /**
         * **voidpm.organization.send_pull_request_summaries_enabled**
         * - `bool` in database
         * - `NOT NULL`, default: `true`
         */
        send_pull_request_summaries_enabled: boolean
        /**
         * **voidpm.organization.send_pull_request_summaries_interval**
         * - `text` in database
         * - `NOT NULL`, default: `'weekly'::text`
         */
        send_pull_request_summaries_interval: string
        /**
         * **voidpm.organization.send_pull_request_summaries_time**
         * - `text` in database
         * - `NOT NULL`, default: `'22:00'::text`
         */
        send_pull_request_summaries_time: string
        /**
         * **voidpm.organization.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: db.TimestampTzString
      }
      export interface Whereable {
        /**
         * **voidpm.organization.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
        /**
         * **voidpm.organization.ext_clerk_user_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_clerk_user_id?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.organization.ext_stripe_customer_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_stripe_customer_id?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.organization.has_unlimited_usage**
         * - `bool` in database
         * - Nullable, default: `false`
         */
        has_unlimited_usage?:
          | boolean
          | db.Parameter<boolean>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.organization.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.organization_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.organization.is_over_plan_pr_limit**
         * - `bool` in database
         * - Nullable, default: `false`
         */
        is_over_plan_pr_limit?:
          | boolean
          | db.Parameter<boolean>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.organization.send_pull_request_summaries_day**
         * - `text` in database
         * - `NOT NULL`, default: `'7'::text`
         */
        send_pull_request_summaries_day?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.organization.send_pull_request_summaries_enabled**
         * - `bool` in database
         * - `NOT NULL`, default: `true`
         */
        send_pull_request_summaries_enabled?:
          | boolean
          | db.Parameter<boolean>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.organization.send_pull_request_summaries_interval**
         * - `text` in database
         * - `NOT NULL`, default: `'weekly'::text`
         */
        send_pull_request_summaries_interval?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.organization.send_pull_request_summaries_time**
         * - `text` in database
         * - `NOT NULL`, default: `'22:00'::text`
         */
        send_pull_request_summaries_time?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.organization.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
      }
      export interface Insertable {
        /**
         * **voidpm.organization.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.organization.ext_clerk_user_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_clerk_user_id: string | db.Parameter<string> | db.SQLFragment
        /**
         * **voidpm.organization.ext_stripe_customer_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_stripe_customer_id?:
          | string
          | db.Parameter<string>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.organization.has_unlimited_usage**
         * - `bool` in database
         * - Nullable, default: `false`
         */
        has_unlimited_usage?:
          | boolean
          | db.Parameter<boolean>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.organization.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.organization_id_seq'::regclass)`
         */
        id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment
        /**
         * **voidpm.organization.is_over_plan_pr_limit**
         * - `bool` in database
         * - Nullable, default: `false`
         */
        is_over_plan_pr_limit?:
          | boolean
          | db.Parameter<boolean>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.organization.send_pull_request_summaries_day**
         * - `text` in database
         * - `NOT NULL`, default: `'7'::text`
         */
        send_pull_request_summaries_day?:
          | string
          | db.Parameter<string>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.organization.send_pull_request_summaries_enabled**
         * - `bool` in database
         * - `NOT NULL`, default: `true`
         */
        send_pull_request_summaries_enabled?:
          | boolean
          | db.Parameter<boolean>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.organization.send_pull_request_summaries_interval**
         * - `text` in database
         * - `NOT NULL`, default: `'weekly'::text`
         */
        send_pull_request_summaries_interval?:
          | string
          | db.Parameter<string>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.organization.send_pull_request_summaries_time**
         * - `text` in database
         * - `NOT NULL`, default: `'22:00'::text`
         */
        send_pull_request_summaries_time?:
          | string
          | db.Parameter<string>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.organization.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
      }
      export interface Updatable {
        /**
         * **voidpm.organization.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.organization.ext_clerk_user_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_clerk_user_id?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **voidpm.organization.ext_stripe_customer_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_stripe_customer_id?:
          | string
          | db.Parameter<string>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | string
              | db.Parameter<string>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.organization.has_unlimited_usage**
         * - `bool` in database
         * - Nullable, default: `false`
         */
        has_unlimited_usage?:
          | boolean
          | db.Parameter<boolean>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | boolean
              | db.Parameter<boolean>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.organization.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.organization_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.DefaultType | db.SQLFragment
            >
        /**
         * **voidpm.organization.is_over_plan_pr_limit**
         * - `bool` in database
         * - Nullable, default: `false`
         */
        is_over_plan_pr_limit?:
          | boolean
          | db.Parameter<boolean>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | boolean
              | db.Parameter<boolean>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.organization.send_pull_request_summaries_day**
         * - `text` in database
         * - `NOT NULL`, default: `'7'::text`
         */
        send_pull_request_summaries_day?:
          | string
          | db.Parameter<string>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.DefaultType | db.SQLFragment
            >
        /**
         * **voidpm.organization.send_pull_request_summaries_enabled**
         * - `bool` in database
         * - `NOT NULL`, default: `true`
         */
        send_pull_request_summaries_enabled?:
          | boolean
          | db.Parameter<boolean>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment
            >
        /**
         * **voidpm.organization.send_pull_request_summaries_interval**
         * - `text` in database
         * - `NOT NULL`, default: `'weekly'::text`
         */
        send_pull_request_summaries_interval?:
          | string
          | db.Parameter<string>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.DefaultType | db.SQLFragment
            >
        /**
         * **voidpm.organization.send_pull_request_summaries_time**
         * - `text` in database
         * - `NOT NULL`, default: `'22:00'::text`
         */
        send_pull_request_summaries_time?:
          | string
          | db.Parameter<string>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.DefaultType | db.SQLFragment
            >
        /**
         * **voidpm.organization.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
      }
      export type UniqueIndex =
        | 'organization_ext_clerk_user_id_key'
        | 'organization_ext_stripe_customer_id_key'
        | 'organization_pkey'
      export type Column = keyof Selectable
      export type OnlyCols<T extends readonly Column[]> = Pick<
        Selectable,
        T[number]
      >
      export type SQLExpression =
        | Table
        | db.ColumnNames<Updatable | (keyof Updatable)[]>
        | db.ColumnValues<Updatable>
        | Whereable
        | Column
        | db.ParentColumn
        | db.GenericSQLExpression
      export type SQL = SQLExpression | SQLExpression[]
    }

    /**
     * **voidpm.plan**
     * - Table in database
     */
    export namespace plan {
      export type Table = 'voidpm.plan'
      export interface Selectable {
        /**
         * **voidpm.plan.billing_interval**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        billing_interval: string
        /**
         * **voidpm.plan.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: Date
        /**
         * **voidpm.plan.ext_stripe_price_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_stripe_price_id: string
        /**
         * **voidpm.plan.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.plan_id_seq'::regclass)`
         */
        id: number
        /**
         * **voidpm.plan.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name: string
        /**
         * **voidpm.plan.pr_limit_per_month**
         * - `int4` in database
         * - Nullable, no default
         */
        pr_limit_per_month: number | null
        /**
         * **voidpm.plan.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: Date
      }
      export interface JSONSelectable {
        /**
         * **voidpm.plan.billing_interval**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        billing_interval: string
        /**
         * **voidpm.plan.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: db.TimestampTzString
        /**
         * **voidpm.plan.ext_stripe_price_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_stripe_price_id: string
        /**
         * **voidpm.plan.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.plan_id_seq'::regclass)`
         */
        id: number
        /**
         * **voidpm.plan.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name: string
        /**
         * **voidpm.plan.pr_limit_per_month**
         * - `int4` in database
         * - Nullable, no default
         */
        pr_limit_per_month: number | null
        /**
         * **voidpm.plan.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: db.TimestampTzString
      }
      export interface Whereable {
        /**
         * **voidpm.plan.billing_interval**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        billing_interval?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.plan.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
        /**
         * **voidpm.plan.ext_stripe_price_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_stripe_price_id?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.plan.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.plan_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.plan.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.plan.pr_limit_per_month**
         * - `int4` in database
         * - Nullable, no default
         */
        pr_limit_per_month?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.plan.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
      }
      export interface Insertable {
        /**
         * **voidpm.plan.billing_interval**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        billing_interval: string | db.Parameter<string> | db.SQLFragment
        /**
         * **voidpm.plan.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.plan.ext_stripe_price_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_stripe_price_id: string | db.Parameter<string> | db.SQLFragment
        /**
         * **voidpm.plan.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.plan_id_seq'::regclass)`
         */
        id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment
        /**
         * **voidpm.plan.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name: string | db.Parameter<string> | db.SQLFragment
        /**
         * **voidpm.plan.pr_limit_per_month**
         * - `int4` in database
         * - Nullable, no default
         */
        pr_limit_per_month?:
          | number
          | db.Parameter<number>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.plan.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
      }
      export interface Updatable {
        /**
         * **voidpm.plan.billing_interval**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        billing_interval?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **voidpm.plan.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.plan.ext_stripe_price_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_stripe_price_id?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **voidpm.plan.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.plan_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.DefaultType | db.SQLFragment
            >
        /**
         * **voidpm.plan.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **voidpm.plan.pr_limit_per_month**
         * - `int4` in database
         * - Nullable, no default
         */
        pr_limit_per_month?:
          | number
          | db.Parameter<number>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | number
              | db.Parameter<number>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.plan.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
      }
      export type UniqueIndex = 'plan_pkey'
      export type Column = keyof Selectable
      export type OnlyCols<T extends readonly Column[]> = Pick<
        Selectable,
        T[number]
      >
      export type SQLExpression =
        | Table
        | db.ColumnNames<Updatable | (keyof Updatable)[]>
        | db.ColumnValues<Updatable>
        | Whereable
        | Column
        | db.ParentColumn
        | db.GenericSQLExpression
      export type SQL = SQLExpression | SQLExpression[]
    }

    /**
     * **voidpm.pull_request**
     * - Table in database
     */
    export namespace pull_request {
      export type Table = 'voidpm.pull_request'
      export interface Selectable {
        /**
         * **voidpm.pull_request.body**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        body: string
        /**
         * **voidpm.pull_request.closed_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        closed_at: Date | null
        /**
         * **voidpm.pull_request.contributor_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        contributor_id: number
        /**
         * **voidpm.pull_request.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: Date
        /**
         * **voidpm.pull_request.embed_metadata**
         * - `json` in database
         * - Nullable, no default
         */
        embed_metadata: db.JSONValue | null
        /**
         * **voidpm.pull_request.embed_value**
         * - `text` in database
         * - Nullable, no default
         */
        embed_value: string | null
        /**
         * **voidpm.pull_request.ext_gh_pull_request_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gh_pull_request_id: number | null
        /**
         * **voidpm.pull_request.ext_gitlab_merge_request_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gitlab_merge_request_id: number | null
        /**
         * **voidpm.pull_request.ext_gitlab_merge_request_iid**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gitlab_merge_request_iid: number | null
        /**
         * **voidpm.pull_request.github_repo_id**
         * - `int4` in database
         * - Nullable, no default
         */
        github_repo_id: number | null
        /**
         * **voidpm.pull_request.gitlab_project_id**
         * - `int4` in database
         * - Nullable, no default
         */
        gitlab_project_id: number | null
        /**
         * **voidpm.pull_request.html_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        html_url: string
        /**
         * **voidpm.pull_request.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.pull_request_id_seq'::regclass)`
         */
        id: number
        /**
         * **voidpm.pull_request.merged_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        merged_at: Date | null
        /**
         * **voidpm.pull_request.number**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        number: number
        /**
         * **voidpm.pull_request.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number
        /**
         * **voidpm.pull_request.title**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        title: string
        /**
         * **voidpm.pull_request.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: Date
      }
      export interface JSONSelectable {
        /**
         * **voidpm.pull_request.body**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        body: string
        /**
         * **voidpm.pull_request.closed_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        closed_at: db.TimestampTzString | null
        /**
         * **voidpm.pull_request.contributor_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        contributor_id: number
        /**
         * **voidpm.pull_request.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: db.TimestampTzString
        /**
         * **voidpm.pull_request.embed_metadata**
         * - `json` in database
         * - Nullable, no default
         */
        embed_metadata: db.JSONValue | null
        /**
         * **voidpm.pull_request.embed_value**
         * - `text` in database
         * - Nullable, no default
         */
        embed_value: string | null
        /**
         * **voidpm.pull_request.ext_gh_pull_request_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gh_pull_request_id: number | null
        /**
         * **voidpm.pull_request.ext_gitlab_merge_request_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gitlab_merge_request_id: number | null
        /**
         * **voidpm.pull_request.ext_gitlab_merge_request_iid**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gitlab_merge_request_iid: number | null
        /**
         * **voidpm.pull_request.github_repo_id**
         * - `int4` in database
         * - Nullable, no default
         */
        github_repo_id: number | null
        /**
         * **voidpm.pull_request.gitlab_project_id**
         * - `int4` in database
         * - Nullable, no default
         */
        gitlab_project_id: number | null
        /**
         * **voidpm.pull_request.html_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        html_url: string
        /**
         * **voidpm.pull_request.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.pull_request_id_seq'::regclass)`
         */
        id: number
        /**
         * **voidpm.pull_request.merged_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        merged_at: db.TimestampTzString | null
        /**
         * **voidpm.pull_request.number**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        number: number
        /**
         * **voidpm.pull_request.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number
        /**
         * **voidpm.pull_request.title**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        title: string
        /**
         * **voidpm.pull_request.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: db.TimestampTzString
      }
      export interface Whereable {
        /**
         * **voidpm.pull_request.body**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        body?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.pull_request.closed_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        closed_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
        /**
         * **voidpm.pull_request.contributor_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        contributor_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.pull_request.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
        /**
         * **voidpm.pull_request.embed_metadata**
         * - `json` in database
         * - Nullable, no default
         */
        embed_metadata?:
          | db.JSONValue
          | db.Parameter<db.JSONValue>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | db.JSONValue
              | db.Parameter<db.JSONValue>
              | db.SQLFragment
              | db.ParentColumn
            >
        /**
         * **voidpm.pull_request.embed_value**
         * - `text` in database
         * - Nullable, no default
         */
        embed_value?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.pull_request.ext_gh_pull_request_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gh_pull_request_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.pull_request.ext_gitlab_merge_request_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gitlab_merge_request_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.pull_request.ext_gitlab_merge_request_iid**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gitlab_merge_request_iid?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.pull_request.github_repo_id**
         * - `int4` in database
         * - Nullable, no default
         */
        github_repo_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.pull_request.gitlab_project_id**
         * - `int4` in database
         * - Nullable, no default
         */
        gitlab_project_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.pull_request.html_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        html_url?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.pull_request.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.pull_request_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.pull_request.merged_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        merged_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
        /**
         * **voidpm.pull_request.number**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        number?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.pull_request.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.pull_request.title**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        title?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.pull_request.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
      }
      export interface Insertable {
        /**
         * **voidpm.pull_request.body**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        body: string | db.Parameter<string> | db.SQLFragment
        /**
         * **voidpm.pull_request.closed_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        closed_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.pull_request.contributor_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        contributor_id: number | db.Parameter<number> | db.SQLFragment
        /**
         * **voidpm.pull_request.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.pull_request.embed_metadata**
         * - `json` in database
         * - Nullable, no default
         */
        embed_metadata?:
          | db.JSONValue
          | db.Parameter<db.JSONValue>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.pull_request.embed_value**
         * - `text` in database
         * - Nullable, no default
         */
        embed_value?:
          | string
          | db.Parameter<string>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.pull_request.ext_gh_pull_request_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gh_pull_request_id?:
          | number
          | db.Parameter<number>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.pull_request.ext_gitlab_merge_request_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gitlab_merge_request_id?:
          | number
          | db.Parameter<number>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.pull_request.ext_gitlab_merge_request_iid**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gitlab_merge_request_iid?:
          | number
          | db.Parameter<number>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.pull_request.github_repo_id**
         * - `int4` in database
         * - Nullable, no default
         */
        github_repo_id?:
          | number
          | db.Parameter<number>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.pull_request.gitlab_project_id**
         * - `int4` in database
         * - Nullable, no default
         */
        gitlab_project_id?:
          | number
          | db.Parameter<number>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.pull_request.html_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        html_url: string | db.Parameter<string> | db.SQLFragment
        /**
         * **voidpm.pull_request.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.pull_request_id_seq'::regclass)`
         */
        id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment
        /**
         * **voidpm.pull_request.merged_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        merged_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.pull_request.number**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        number: number | db.Parameter<number> | db.SQLFragment
        /**
         * **voidpm.pull_request.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number | db.Parameter<number> | db.SQLFragment
        /**
         * **voidpm.pull_request.title**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        title: string | db.Parameter<string> | db.SQLFragment
        /**
         * **voidpm.pull_request.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
      }
      export interface Updatable {
        /**
         * **voidpm.pull_request.body**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        body?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **voidpm.pull_request.closed_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        closed_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.pull_request.contributor_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        contributor_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>
        /**
         * **voidpm.pull_request.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.pull_request.embed_metadata**
         * - `json` in database
         * - Nullable, no default
         */
        embed_metadata?:
          | db.JSONValue
          | db.Parameter<db.JSONValue>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | db.JSONValue
              | db.Parameter<db.JSONValue>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.pull_request.embed_value**
         * - `text` in database
         * - Nullable, no default
         */
        embed_value?:
          | string
          | db.Parameter<string>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | string
              | db.Parameter<string>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.pull_request.ext_gh_pull_request_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gh_pull_request_id?:
          | number
          | db.Parameter<number>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | number
              | db.Parameter<number>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.pull_request.ext_gitlab_merge_request_id**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gitlab_merge_request_id?:
          | number
          | db.Parameter<number>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | number
              | db.Parameter<number>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.pull_request.ext_gitlab_merge_request_iid**
         * - `int4` in database
         * - Nullable, no default
         */
        ext_gitlab_merge_request_iid?:
          | number
          | db.Parameter<number>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | number
              | db.Parameter<number>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.pull_request.github_repo_id**
         * - `int4` in database
         * - Nullable, no default
         */
        github_repo_id?:
          | number
          | db.Parameter<number>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | number
              | db.Parameter<number>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.pull_request.gitlab_project_id**
         * - `int4` in database
         * - Nullable, no default
         */
        gitlab_project_id?:
          | number
          | db.Parameter<number>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | number
              | db.Parameter<number>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.pull_request.html_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        html_url?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **voidpm.pull_request.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.pull_request_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.DefaultType | db.SQLFragment
            >
        /**
         * **voidpm.pull_request.merged_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        merged_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.pull_request.number**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        number?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>
        /**
         * **voidpm.pull_request.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>
        /**
         * **voidpm.pull_request.title**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        title?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **voidpm.pull_request.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
      }
      export type UniqueIndex =
        | 'pull_request_ext_gh_pull_request_id_key'
        | 'pull_request_ext_gitlab_merge_request_id_key'
        | 'pull_request_pkey'
      export type Column = keyof Selectable
      export type OnlyCols<T extends readonly Column[]> = Pick<
        Selectable,
        T[number]
      >
      export type SQLExpression =
        | Table
        | db.ColumnNames<Updatable | (keyof Updatable)[]>
        | db.ColumnValues<Updatable>
        | Whereable
        | Column
        | db.ParentColumn
        | db.GenericSQLExpression
      export type SQL = SQLExpression | SQLExpression[]
    }

    /**
     * **voidpm.subscription**
     * - Table in database
     */
    export namespace subscription {
      export type Table = 'voidpm.subscription'
      export interface Selectable {
        /**
         * **voidpm.subscription.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: Date
        /**
         * **voidpm.subscription.ends_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        ends_at: Date | null
        /**
         * **voidpm.subscription.ext_stripe_subscription_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_stripe_subscription_id: string
        /**
         * **voidpm.subscription.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.subscription_id_seq'::regclass)`
         */
        id: number
        /**
         * **voidpm.subscription.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name: string
        /**
         * **voidpm.subscription.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number
        /**
         * **voidpm.subscription.plan_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        plan_id: number
        /**
         * **voidpm.subscription.stripe_status**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        stripe_status: string
        /**
         * **voidpm.subscription.trial_ends_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        trial_ends_at: Date | null
        /**
         * **voidpm.subscription.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: Date
      }
      export interface JSONSelectable {
        /**
         * **voidpm.subscription.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: db.TimestampTzString
        /**
         * **voidpm.subscription.ends_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        ends_at: db.TimestampTzString | null
        /**
         * **voidpm.subscription.ext_stripe_subscription_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_stripe_subscription_id: string
        /**
         * **voidpm.subscription.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.subscription_id_seq'::regclass)`
         */
        id: number
        /**
         * **voidpm.subscription.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name: string
        /**
         * **voidpm.subscription.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number
        /**
         * **voidpm.subscription.plan_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        plan_id: number
        /**
         * **voidpm.subscription.stripe_status**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        stripe_status: string
        /**
         * **voidpm.subscription.trial_ends_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        trial_ends_at: db.TimestampTzString | null
        /**
         * **voidpm.subscription.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: db.TimestampTzString
      }
      export interface Whereable {
        /**
         * **voidpm.subscription.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
        /**
         * **voidpm.subscription.ends_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        ends_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
        /**
         * **voidpm.subscription.ext_stripe_subscription_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_stripe_subscription_id?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.subscription.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.subscription_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.subscription.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.subscription.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.subscription.plan_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        plan_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.subscription.stripe_status**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        stripe_status?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **voidpm.subscription.trial_ends_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        trial_ends_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
        /**
         * **voidpm.subscription.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
      }
      export interface Insertable {
        /**
         * **voidpm.subscription.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.subscription.ends_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        ends_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.subscription.ext_stripe_subscription_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_stripe_subscription_id:
          | string
          | db.Parameter<string>
          | db.SQLFragment
        /**
         * **voidpm.subscription.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.subscription_id_seq'::regclass)`
         */
        id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment
        /**
         * **voidpm.subscription.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name: string | db.Parameter<string> | db.SQLFragment
        /**
         * **voidpm.subscription.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number | db.Parameter<number> | db.SQLFragment
        /**
         * **voidpm.subscription.plan_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        plan_id: number | db.Parameter<number> | db.SQLFragment
        /**
         * **voidpm.subscription.stripe_status**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        stripe_status: string | db.Parameter<string> | db.SQLFragment
        /**
         * **voidpm.subscription.trial_ends_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        trial_ends_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **voidpm.subscription.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
      }
      export interface Updatable {
        /**
         * **voidpm.subscription.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.subscription.ends_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        ends_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.subscription.ext_stripe_subscription_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_stripe_subscription_id?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **voidpm.subscription.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('voidpm.subscription_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.DefaultType | db.SQLFragment
            >
        /**
         * **voidpm.subscription.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **voidpm.subscription.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>
        /**
         * **voidpm.subscription.plan_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        plan_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>
        /**
         * **voidpm.subscription.stripe_status**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        stripe_status?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **voidpm.subscription.trial_ends_at**
         * - `timestamptz` in database
         * - Nullable, no default
         */
        trial_ends_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **voidpm.subscription.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
      }
      export type UniqueIndex =
        | 'subscription_organization_id_key'
        | 'subscription_pkey'
      export type Column = keyof Selectable
      export type OnlyCols<T extends readonly Column[]> = Pick<
        Selectable,
        T[number]
      >
      export type SQLExpression =
        | Table
        | db.ColumnNames<Updatable | (keyof Updatable)[]>
        | db.ColumnValues<Updatable>
        | Whereable
        | Column
        | db.ParentColumn
        | db.GenericSQLExpression
      export type SQL = SQLExpression | SQLExpression[]
    }

    /* --- aggregate types --- */

    export type Table =
      | contributor.Table
      | organization.Table
      | plan.Table
      | pull_request.Table
      | subscription.Table
    export type Selectable =
      | contributor.Selectable
      | organization.Selectable
      | plan.Selectable
      | pull_request.Selectable
      | subscription.Selectable
    export type JSONSelectable =
      | contributor.JSONSelectable
      | organization.JSONSelectable
      | plan.JSONSelectable
      | pull_request.JSONSelectable
      | subscription.JSONSelectable
    export type Whereable =
      | contributor.Whereable
      | organization.Whereable
      | plan.Whereable
      | pull_request.Whereable
      | subscription.Whereable
    export type Insertable =
      | contributor.Insertable
      | organization.Insertable
      | plan.Insertable
      | pull_request.Insertable
      | subscription.Insertable
    export type Updatable =
      | contributor.Updatable
      | organization.Updatable
      | plan.Updatable
      | pull_request.Updatable
      | subscription.Updatable
    export type UniqueIndex =
      | contributor.UniqueIndex
      | organization.UniqueIndex
      | plan.UniqueIndex
      | pull_request.UniqueIndex
      | subscription.UniqueIndex
    export type Column =
      | contributor.Column
      | organization.Column
      | plan.Column
      | pull_request.Column
      | subscription.Column

    export type AllBaseTables = [
      contributor.Table,
      organization.Table,
      plan.Table,
      pull_request.Table,
      subscription.Table,
    ]
    export type AllForeignTables = []
    export type AllViews = []
    export type AllMaterializedViews = []
    export type AllTablesAndViews = [
      contributor.Table,
      organization.Table,
      plan.Table,
      pull_request.Table,
      subscription.Table,
    ]
  }

  /* === schema: github === */

  export namespace github {
    /* --- enums --- */
    /* (none) */

    /* --- tables --- */

    /**
     * **github.organization**
     * - Table in database
     */
    export namespace organization {
      export type Table = 'github.organization'
      export interface Selectable {
        /**
         * **github.organization.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: Date
        /**
         * **github.organization.ext_gh_install_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        ext_gh_install_id: number
        /**
         * **github.organization.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('github.organization_id_seq'::regclass)`
         */
        id: number
        /**
         * **github.organization.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number
        /**
         * **github.organization.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: Date
      }
      export interface JSONSelectable {
        /**
         * **github.organization.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: db.TimestampTzString
        /**
         * **github.organization.ext_gh_install_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        ext_gh_install_id: number
        /**
         * **github.organization.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('github.organization_id_seq'::regclass)`
         */
        id: number
        /**
         * **github.organization.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number
        /**
         * **github.organization.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: db.TimestampTzString
      }
      export interface Whereable {
        /**
         * **github.organization.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
        /**
         * **github.organization.ext_gh_install_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        ext_gh_install_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **github.organization.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('github.organization_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **github.organization.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **github.organization.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
      }
      export interface Insertable {
        /**
         * **github.organization.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **github.organization.ext_gh_install_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        ext_gh_install_id: number | db.Parameter<number> | db.SQLFragment
        /**
         * **github.organization.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('github.organization_id_seq'::regclass)`
         */
        id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment
        /**
         * **github.organization.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number | db.Parameter<number> | db.SQLFragment
        /**
         * **github.organization.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
      }
      export interface Updatable {
        /**
         * **github.organization.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **github.organization.ext_gh_install_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        ext_gh_install_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>
        /**
         * **github.organization.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('github.organization_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.DefaultType | db.SQLFragment
            >
        /**
         * **github.organization.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>
        /**
         * **github.organization.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
      }
      export type UniqueIndex =
        | 'organization_ext_gh_install_id_key'
        | 'organization_organization_id_key'
        | 'organization_pkey'
      export type Column = keyof Selectable
      export type OnlyCols<T extends readonly Column[]> = Pick<
        Selectable,
        T[number]
      >
      export type SQLExpression =
        | Table
        | db.ColumnNames<Updatable | (keyof Updatable)[]>
        | db.ColumnValues<Updatable>
        | Whereable
        | Column
        | db.ParentColumn
        | db.GenericSQLExpression
      export type SQL = SQLExpression | SQLExpression[]
    }

    /**
     * **github.repo**
     * - Table in database
     */
    export namespace repo {
      export type Table = 'github.repo'
      export interface Selectable {
        /**
         * **github.repo.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: Date
        /**
         * **github.repo.ext_gh_repo_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        ext_gh_repo_id: number
        /**
         * **github.repo.html_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        html_url: string
        /**
         * **github.repo.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('github.repo_id_seq'::regclass)`
         */
        id: number
        /**
         * **github.repo.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name: string
        /**
         * **github.repo.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number
        /**
         * **github.repo.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: Date
      }
      export interface JSONSelectable {
        /**
         * **github.repo.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: db.TimestampTzString
        /**
         * **github.repo.ext_gh_repo_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        ext_gh_repo_id: number
        /**
         * **github.repo.html_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        html_url: string
        /**
         * **github.repo.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('github.repo_id_seq'::regclass)`
         */
        id: number
        /**
         * **github.repo.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name: string
        /**
         * **github.repo.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number
        /**
         * **github.repo.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: db.TimestampTzString
      }
      export interface Whereable {
        /**
         * **github.repo.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
        /**
         * **github.repo.ext_gh_repo_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        ext_gh_repo_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **github.repo.html_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        html_url?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **github.repo.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('github.repo_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **github.repo.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **github.repo.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **github.repo.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
      }
      export interface Insertable {
        /**
         * **github.repo.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **github.repo.ext_gh_repo_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        ext_gh_repo_id: number | db.Parameter<number> | db.SQLFragment
        /**
         * **github.repo.html_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        html_url: string | db.Parameter<string> | db.SQLFragment
        /**
         * **github.repo.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('github.repo_id_seq'::regclass)`
         */
        id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment
        /**
         * **github.repo.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name: string | db.Parameter<string> | db.SQLFragment
        /**
         * **github.repo.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number | db.Parameter<number> | db.SQLFragment
        /**
         * **github.repo.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
      }
      export interface Updatable {
        /**
         * **github.repo.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **github.repo.ext_gh_repo_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        ext_gh_repo_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>
        /**
         * **github.repo.html_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        html_url?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **github.repo.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('github.repo_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.DefaultType | db.SQLFragment
            >
        /**
         * **github.repo.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **github.repo.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>
        /**
         * **github.repo.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
      }
      export type UniqueIndex = 'repo_ext_gh_repo_id_key' | 'repo_pkey'
      export type Column = keyof Selectable
      export type OnlyCols<T extends readonly Column[]> = Pick<
        Selectable,
        T[number]
      >
      export type SQLExpression =
        | Table
        | db.ColumnNames<Updatable | (keyof Updatable)[]>
        | db.ColumnValues<Updatable>
        | Whereable
        | Column
        | db.ParentColumn
        | db.GenericSQLExpression
      export type SQL = SQLExpression | SQLExpression[]
    }

    /* --- aggregate types --- */

    export type Table = organization.Table | repo.Table
    export type Selectable = organization.Selectable | repo.Selectable
    export type JSONSelectable =
      | organization.JSONSelectable
      | repo.JSONSelectable
    export type Whereable = organization.Whereable | repo.Whereable
    export type Insertable = organization.Insertable | repo.Insertable
    export type Updatable = organization.Updatable | repo.Updatable
    export type UniqueIndex = organization.UniqueIndex | repo.UniqueIndex
    export type Column = organization.Column | repo.Column

    export type AllBaseTables = [organization.Table, repo.Table]
    export type AllForeignTables = []
    export type AllViews = []
    export type AllMaterializedViews = []
    export type AllTablesAndViews = [organization.Table, repo.Table]
  }

  /* === schema: slack === */

  export namespace slack {
    /* --- enums --- */
    /* (none) */

    /* --- tables --- */

    /**
     * **slack.workspace**
     * - Table in database
     */
    export namespace workspace {
      export type Table = 'slack.workspace'
      export interface Selectable {
        /**
         * **slack.workspace.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: Date
        /**
         * **slack.workspace.ext_slack_bot_user_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_slack_bot_user_id: string
        /**
         * **slack.workspace.ext_slack_team_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_slack_team_id: string
        /**
         * **slack.workspace.ext_slack_webhook_channel_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_slack_webhook_channel_id: string
        /**
         * **slack.workspace.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('slack.workspace_id_seq'::regclass)`
         */
        id: number
        /**
         * **slack.workspace.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number
        /**
         * **slack.workspace.slack_access_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        slack_access_token: string
        /**
         * **slack.workspace.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: Date
        /**
         * **slack.workspace.webhook_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        webhook_url: string
      }
      export interface JSONSelectable {
        /**
         * **slack.workspace.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: db.TimestampTzString
        /**
         * **slack.workspace.ext_slack_bot_user_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_slack_bot_user_id: string
        /**
         * **slack.workspace.ext_slack_team_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_slack_team_id: string
        /**
         * **slack.workspace.ext_slack_webhook_channel_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_slack_webhook_channel_id: string
        /**
         * **slack.workspace.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('slack.workspace_id_seq'::regclass)`
         */
        id: number
        /**
         * **slack.workspace.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number
        /**
         * **slack.workspace.slack_access_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        slack_access_token: string
        /**
         * **slack.workspace.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: db.TimestampTzString
        /**
         * **slack.workspace.webhook_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        webhook_url: string
      }
      export interface Whereable {
        /**
         * **slack.workspace.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
        /**
         * **slack.workspace.ext_slack_bot_user_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_slack_bot_user_id?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **slack.workspace.ext_slack_team_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_slack_team_id?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **slack.workspace.ext_slack_webhook_channel_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_slack_webhook_channel_id?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **slack.workspace.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('slack.workspace_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **slack.workspace.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **slack.workspace.slack_access_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        slack_access_token?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **slack.workspace.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
        /**
         * **slack.workspace.webhook_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        webhook_url?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
      }
      export interface Insertable {
        /**
         * **slack.workspace.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **slack.workspace.ext_slack_bot_user_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_slack_bot_user_id: string | db.Parameter<string> | db.SQLFragment
        /**
         * **slack.workspace.ext_slack_team_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_slack_team_id: string | db.Parameter<string> | db.SQLFragment
        /**
         * **slack.workspace.ext_slack_webhook_channel_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_slack_webhook_channel_id:
          | string
          | db.Parameter<string>
          | db.SQLFragment
        /**
         * **slack.workspace.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('slack.workspace_id_seq'::regclass)`
         */
        id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment
        /**
         * **slack.workspace.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number | db.Parameter<number> | db.SQLFragment
        /**
         * **slack.workspace.slack_access_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        slack_access_token: string | db.Parameter<string> | db.SQLFragment
        /**
         * **slack.workspace.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **slack.workspace.webhook_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        webhook_url: string | db.Parameter<string> | db.SQLFragment
      }
      export interface Updatable {
        /**
         * **slack.workspace.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **slack.workspace.ext_slack_bot_user_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_slack_bot_user_id?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **slack.workspace.ext_slack_team_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_slack_team_id?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **slack.workspace.ext_slack_webhook_channel_id**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        ext_slack_webhook_channel_id?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **slack.workspace.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('slack.workspace_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.DefaultType | db.SQLFragment
            >
        /**
         * **slack.workspace.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>
        /**
         * **slack.workspace.slack_access_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        slack_access_token?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **slack.workspace.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **slack.workspace.webhook_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        webhook_url?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
      }
      export type UniqueIndex =
        | 'workspace_ext_slack_team_id_key'
        | 'workspace_organization_id_key'
        | 'workspace_pkey'
      export type Column = keyof Selectable
      export type OnlyCols<T extends readonly Column[]> = Pick<
        Selectable,
        T[number]
      >
      export type SQLExpression =
        | Table
        | db.ColumnNames<Updatable | (keyof Updatable)[]>
        | db.ColumnValues<Updatable>
        | Whereable
        | Column
        | db.ParentColumn
        | db.GenericSQLExpression
      export type SQL = SQLExpression | SQLExpression[]
    }

    /* --- aggregate types --- */

    export type Table = workspace.Table
    export type Selectable = workspace.Selectable
    export type JSONSelectable = workspace.JSONSelectable
    export type Whereable = workspace.Whereable
    export type Insertable = workspace.Insertable
    export type Updatable = workspace.Updatable
    export type UniqueIndex = workspace.UniqueIndex
    export type Column = workspace.Column

    export type AllBaseTables = [workspace.Table]
    export type AllForeignTables = []
    export type AllViews = []
    export type AllMaterializedViews = []
    export type AllTablesAndViews = [workspace.Table]
  }

  /* === schema: trello === */

  export namespace trello {
    /* --- enums --- */
    /* (none) */

    /* --- tables --- */

    /**
     * **trello.workspace**
     * - Table in database
     */
    export namespace workspace {
      export type Table = 'trello.workspace'
      export interface Selectable {
        /**
         * **trello.workspace.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: Date
        /**
         * **trello.workspace.ext_trello_board_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_trello_board_id: string | null
        /**
         * **trello.workspace.ext_trello_done_task_list_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_trello_done_task_list_id: string | null
        /**
         * **trello.workspace.ext_trello_new_task_list_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_trello_new_task_list_id: string | null
        /**
         * **trello.workspace.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('trello.workspace_id_seq'::regclass)`
         */
        id: number
        /**
         * **trello.workspace.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number
        /**
         * **trello.workspace.trello_access_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        trello_access_token: string
        /**
         * **trello.workspace.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: Date
      }
      export interface JSONSelectable {
        /**
         * **trello.workspace.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: db.TimestampTzString
        /**
         * **trello.workspace.ext_trello_board_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_trello_board_id: string | null
        /**
         * **trello.workspace.ext_trello_done_task_list_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_trello_done_task_list_id: string | null
        /**
         * **trello.workspace.ext_trello_new_task_list_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_trello_new_task_list_id: string | null
        /**
         * **trello.workspace.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('trello.workspace_id_seq'::regclass)`
         */
        id: number
        /**
         * **trello.workspace.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number
        /**
         * **trello.workspace.trello_access_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        trello_access_token: string
        /**
         * **trello.workspace.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: db.TimestampTzString
      }
      export interface Whereable {
        /**
         * **trello.workspace.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
        /**
         * **trello.workspace.ext_trello_board_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_trello_board_id?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **trello.workspace.ext_trello_done_task_list_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_trello_done_task_list_id?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **trello.workspace.ext_trello_new_task_list_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_trello_new_task_list_id?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **trello.workspace.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('trello.workspace_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **trello.workspace.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **trello.workspace.trello_access_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        trello_access_token?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **trello.workspace.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
      }
      export interface Insertable {
        /**
         * **trello.workspace.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **trello.workspace.ext_trello_board_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_trello_board_id?:
          | string
          | db.Parameter<string>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **trello.workspace.ext_trello_done_task_list_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_trello_done_task_list_id?:
          | string
          | db.Parameter<string>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **trello.workspace.ext_trello_new_task_list_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_trello_new_task_list_id?:
          | string
          | db.Parameter<string>
          | null
          | db.DefaultType
          | db.SQLFragment
        /**
         * **trello.workspace.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('trello.workspace_id_seq'::regclass)`
         */
        id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment
        /**
         * **trello.workspace.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number | db.Parameter<number> | db.SQLFragment
        /**
         * **trello.workspace.trello_access_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        trello_access_token: string | db.Parameter<string> | db.SQLFragment
        /**
         * **trello.workspace.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
      }
      export interface Updatable {
        /**
         * **trello.workspace.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **trello.workspace.ext_trello_board_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_trello_board_id?:
          | string
          | db.Parameter<string>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | string
              | db.Parameter<string>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **trello.workspace.ext_trello_done_task_list_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_trello_done_task_list_id?:
          | string
          | db.Parameter<string>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | string
              | db.Parameter<string>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **trello.workspace.ext_trello_new_task_list_id**
         * - `text` in database
         * - Nullable, no default
         */
        ext_trello_new_task_list_id?:
          | string
          | db.Parameter<string>
          | null
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | string
              | db.Parameter<string>
              | null
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **trello.workspace.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('trello.workspace_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.DefaultType | db.SQLFragment
            >
        /**
         * **trello.workspace.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>
        /**
         * **trello.workspace.trello_access_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        trello_access_token?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **trello.workspace.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
      }
      export type UniqueIndex =
        | 'workspace_organization_id_key'
        | 'workspace_pkey'
      export type Column = keyof Selectable
      export type OnlyCols<T extends readonly Column[]> = Pick<
        Selectable,
        T[number]
      >
      export type SQLExpression =
        | Table
        | db.ColumnNames<Updatable | (keyof Updatable)[]>
        | db.ColumnValues<Updatable>
        | Whereable
        | Column
        | db.ParentColumn
        | db.GenericSQLExpression
      export type SQL = SQLExpression | SQLExpression[]
    }

    /* --- aggregate types --- */

    export type Table = workspace.Table
    export type Selectable = workspace.Selectable
    export type JSONSelectable = workspace.JSONSelectable
    export type Whereable = workspace.Whereable
    export type Insertable = workspace.Insertable
    export type Updatable = workspace.Updatable
    export type UniqueIndex = workspace.UniqueIndex
    export type Column = workspace.Column

    export type AllBaseTables = [workspace.Table]
    export type AllForeignTables = []
    export type AllViews = []
    export type AllMaterializedViews = []
    export type AllTablesAndViews = [workspace.Table]
  }

  /* === schema: gitlab === */

  export namespace gitlab {
    /* --- enums --- */
    /* (none) */

    /* --- tables --- */

    /**
     * **gitlab.app_user**
     * - Table in database
     */
    export namespace app_user {
      export type Table = 'gitlab.app_user'
      export interface Selectable {
        /**
         * **gitlab.app_user.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: Date
        /**
         * **gitlab.app_user.gitlab_access_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        gitlab_access_token: string
        /**
         * **gitlab.app_user.gitlab_refresh_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        gitlab_refresh_token: string
        /**
         * **gitlab.app_user.gitlab_webhook_secret**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        gitlab_webhook_secret: string
        /**
         * **gitlab.app_user.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('gitlab.app_user_id_seq'::regclass)`
         */
        id: number
        /**
         * **gitlab.app_user.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number
        /**
         * **gitlab.app_user.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: Date
      }
      export interface JSONSelectable {
        /**
         * **gitlab.app_user.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: db.TimestampTzString
        /**
         * **gitlab.app_user.gitlab_access_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        gitlab_access_token: string
        /**
         * **gitlab.app_user.gitlab_refresh_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        gitlab_refresh_token: string
        /**
         * **gitlab.app_user.gitlab_webhook_secret**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        gitlab_webhook_secret: string
        /**
         * **gitlab.app_user.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('gitlab.app_user_id_seq'::regclass)`
         */
        id: number
        /**
         * **gitlab.app_user.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number
        /**
         * **gitlab.app_user.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: db.TimestampTzString
      }
      export interface Whereable {
        /**
         * **gitlab.app_user.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
        /**
         * **gitlab.app_user.gitlab_access_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        gitlab_access_token?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **gitlab.app_user.gitlab_refresh_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        gitlab_refresh_token?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **gitlab.app_user.gitlab_webhook_secret**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        gitlab_webhook_secret?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **gitlab.app_user.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('gitlab.app_user_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **gitlab.app_user.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **gitlab.app_user.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
      }
      export interface Insertable {
        /**
         * **gitlab.app_user.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **gitlab.app_user.gitlab_access_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        gitlab_access_token: string | db.Parameter<string> | db.SQLFragment
        /**
         * **gitlab.app_user.gitlab_refresh_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        gitlab_refresh_token: string | db.Parameter<string> | db.SQLFragment
        /**
         * **gitlab.app_user.gitlab_webhook_secret**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        gitlab_webhook_secret: string | db.Parameter<string> | db.SQLFragment
        /**
         * **gitlab.app_user.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('gitlab.app_user_id_seq'::regclass)`
         */
        id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment
        /**
         * **gitlab.app_user.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number | db.Parameter<number> | db.SQLFragment
        /**
         * **gitlab.app_user.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
      }
      export interface Updatable {
        /**
         * **gitlab.app_user.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **gitlab.app_user.gitlab_access_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        gitlab_access_token?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **gitlab.app_user.gitlab_refresh_token**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        gitlab_refresh_token?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **gitlab.app_user.gitlab_webhook_secret**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        gitlab_webhook_secret?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **gitlab.app_user.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('gitlab.app_user_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.DefaultType | db.SQLFragment
            >
        /**
         * **gitlab.app_user.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>
        /**
         * **gitlab.app_user.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
      }
      export type UniqueIndex = 'app_user_organization_id_key' | 'app_user_pkey'
      export type Column = keyof Selectable
      export type OnlyCols<T extends readonly Column[]> = Pick<
        Selectable,
        T[number]
      >
      export type SQLExpression =
        | Table
        | db.ColumnNames<Updatable | (keyof Updatable)[]>
        | db.ColumnValues<Updatable>
        | Whereable
        | Column
        | db.ParentColumn
        | db.GenericSQLExpression
      export type SQL = SQLExpression | SQLExpression[]
    }

    /**
     * **gitlab.project**
     * - Table in database
     */
    export namespace project {
      export type Table = 'gitlab.project'
      export interface Selectable {
        /**
         * **gitlab.project.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: Date
        /**
         * **gitlab.project.enabled**
         * - `bool` in database
         * - `NOT NULL`, default: `false`
         */
        enabled: boolean
        /**
         * **gitlab.project.ext_gitlab_project_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        ext_gitlab_project_id: number
        /**
         * **gitlab.project.has_completed_setup**
         * - `bool` in database
         * - `NOT NULL`, default: `false`
         */
        has_completed_setup: boolean
        /**
         * **gitlab.project.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('gitlab.project_id_seq'::regclass)`
         */
        id: number
        /**
         * **gitlab.project.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name: string
        /**
         * **gitlab.project.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number
        /**
         * **gitlab.project.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: Date
        /**
         * **gitlab.project.web_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        web_url: string
      }
      export interface JSONSelectable {
        /**
         * **gitlab.project.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at: db.TimestampTzString
        /**
         * **gitlab.project.enabled**
         * - `bool` in database
         * - `NOT NULL`, default: `false`
         */
        enabled: boolean
        /**
         * **gitlab.project.ext_gitlab_project_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        ext_gitlab_project_id: number
        /**
         * **gitlab.project.has_completed_setup**
         * - `bool` in database
         * - `NOT NULL`, default: `false`
         */
        has_completed_setup: boolean
        /**
         * **gitlab.project.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('gitlab.project_id_seq'::regclass)`
         */
        id: number
        /**
         * **gitlab.project.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name: string
        /**
         * **gitlab.project.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number
        /**
         * **gitlab.project.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at: db.TimestampTzString
        /**
         * **gitlab.project.web_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        web_url: string
      }
      export interface Whereable {
        /**
         * **gitlab.project.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
        /**
         * **gitlab.project.enabled**
         * - `bool` in database
         * - `NOT NULL`, default: `false`
         */
        enabled?:
          | boolean
          | db.Parameter<boolean>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **gitlab.project.ext_gitlab_project_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        ext_gitlab_project_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **gitlab.project.has_completed_setup**
         * - `bool` in database
         * - `NOT NULL`, default: `false`
         */
        has_completed_setup?:
          | boolean
          | db.Parameter<boolean>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              boolean | db.Parameter<boolean> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **gitlab.project.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('gitlab.project_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **gitlab.project.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **gitlab.project.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.SQLFragment | db.ParentColumn
            >
        /**
         * **gitlab.project.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.SQLFragment
              | db.ParentColumn
            >
        /**
         * **gitlab.project.web_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        web_url?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.ParentColumn
          | db.SQLFragment<
              any,
              string | db.Parameter<string> | db.SQLFragment | db.ParentColumn
            >
      }
      export interface Insertable {
        /**
         * **gitlab.project.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **gitlab.project.enabled**
         * - `bool` in database
         * - `NOT NULL`, default: `false`
         */
        enabled?:
          | boolean
          | db.Parameter<boolean>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **gitlab.project.ext_gitlab_project_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        ext_gitlab_project_id: number | db.Parameter<number> | db.SQLFragment
        /**
         * **gitlab.project.has_completed_setup**
         * - `bool` in database
         * - `NOT NULL`, default: `false`
         */
        has_completed_setup?:
          | boolean
          | db.Parameter<boolean>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **gitlab.project.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('gitlab.project_id_seq'::regclass)`
         */
        id?: number | db.Parameter<number> | db.DefaultType | db.SQLFragment
        /**
         * **gitlab.project.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name: string | db.Parameter<string> | db.SQLFragment
        /**
         * **gitlab.project.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id: number | db.Parameter<number> | db.SQLFragment
        /**
         * **gitlab.project.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
        /**
         * **gitlab.project.web_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        web_url: string | db.Parameter<string> | db.SQLFragment
      }
      export interface Updatable {
        /**
         * **gitlab.project.created_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        created_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **gitlab.project.enabled**
         * - `bool` in database
         * - `NOT NULL`, default: `false`
         */
        enabled?:
          | boolean
          | db.Parameter<boolean>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment
            >
        /**
         * **gitlab.project.ext_gitlab_project_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        ext_gitlab_project_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>
        /**
         * **gitlab.project.has_completed_setup**
         * - `bool` in database
         * - `NOT NULL`, default: `false`
         */
        has_completed_setup?:
          | boolean
          | db.Parameter<boolean>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              boolean | db.Parameter<boolean> | db.DefaultType | db.SQLFragment
            >
        /**
         * **gitlab.project.id**
         * - `int4` in database
         * - `NOT NULL`, default: `nextval('gitlab.project_id_seq'::regclass)`
         */
        id?:
          | number
          | db.Parameter<number>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              number | db.Parameter<number> | db.DefaultType | db.SQLFragment
            >
        /**
         * **gitlab.project.name**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        name?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
        /**
         * **gitlab.project.organization_id**
         * - `int4` in database
         * - `NOT NULL`, no default
         */
        organization_id?:
          | number
          | db.Parameter<number>
          | db.SQLFragment
          | db.SQLFragment<any, number | db.Parameter<number> | db.SQLFragment>
        /**
         * **gitlab.project.updated_at**
         * - `timestamptz` in database
         * - `NOT NULL`, default: `CURRENT_TIMESTAMP`
         */
        updated_at?:
          | (db.TimestampTzString | Date)
          | db.Parameter<db.TimestampTzString | Date>
          | db.DefaultType
          | db.SQLFragment
          | db.SQLFragment<
              any,
              | (db.TimestampTzString | Date)
              | db.Parameter<db.TimestampTzString | Date>
              | db.DefaultType
              | db.SQLFragment
            >
        /**
         * **gitlab.project.web_url**
         * - `text` in database
         * - `NOT NULL`, no default
         */
        web_url?:
          | string
          | db.Parameter<string>
          | db.SQLFragment
          | db.SQLFragment<any, string | db.Parameter<string> | db.SQLFragment>
      }
      export type UniqueIndex =
        | 'project_ext_gitlab_project_id_key'
        | 'project_pkey'
      export type Column = keyof Selectable
      export type OnlyCols<T extends readonly Column[]> = Pick<
        Selectable,
        T[number]
      >
      export type SQLExpression =
        | Table
        | db.ColumnNames<Updatable | (keyof Updatable)[]>
        | db.ColumnValues<Updatable>
        | Whereable
        | Column
        | db.ParentColumn
        | db.GenericSQLExpression
      export type SQL = SQLExpression | SQLExpression[]
    }

    /* --- aggregate types --- */

    export type Table = app_user.Table | project.Table
    export type Selectable = app_user.Selectable | project.Selectable
    export type JSONSelectable =
      | app_user.JSONSelectable
      | project.JSONSelectable
    export type Whereable = app_user.Whereable | project.Whereable
    export type Insertable = app_user.Insertable | project.Insertable
    export type Updatable = app_user.Updatable | project.Updatable
    export type UniqueIndex = app_user.UniqueIndex | project.UniqueIndex
    export type Column = app_user.Column | project.Column

    export type AllBaseTables = [app_user.Table, project.Table]
    export type AllForeignTables = []
    export type AllViews = []
    export type AllMaterializedViews = []
    export type AllTablesAndViews = [app_user.Table, project.Table]
  }

  /* === global aggregate types === */

  export type Schema = 'voidpm' | 'github' | 'slack' | 'trello' | 'gitlab'
  export type Table =
    | voidpm.Table
    | github.Table
    | slack.Table
    | trello.Table
    | gitlab.Table
  export type Selectable =
    | voidpm.Selectable
    | github.Selectable
    | slack.Selectable
    | trello.Selectable
    | gitlab.Selectable
  export type JSONSelectable =
    | voidpm.JSONSelectable
    | github.JSONSelectable
    | slack.JSONSelectable
    | trello.JSONSelectable
    | gitlab.JSONSelectable
  export type Whereable =
    | voidpm.Whereable
    | github.Whereable
    | slack.Whereable
    | trello.Whereable
    | gitlab.Whereable
  export type Insertable =
    | voidpm.Insertable
    | github.Insertable
    | slack.Insertable
    | trello.Insertable
    | gitlab.Insertable
  export type Updatable =
    | voidpm.Updatable
    | github.Updatable
    | slack.Updatable
    | trello.Updatable
    | gitlab.Updatable
  export type UniqueIndex =
    | voidpm.UniqueIndex
    | github.UniqueIndex
    | slack.UniqueIndex
    | trello.UniqueIndex
    | gitlab.UniqueIndex
  export type Column =
    | voidpm.Column
    | github.Column
    | slack.Column
    | trello.Column
    | gitlab.Column

  export type AllSchemas = ['voidpm', 'github', 'slack', 'trello', 'gitlab']
  export type AllBaseTables = [
    ...voidpm.AllBaseTables,
    ...github.AllBaseTables,
    ...slack.AllBaseTables,
    ...trello.AllBaseTables,
    ...gitlab.AllBaseTables,
  ]
  export type AllForeignTables = [
    ...voidpm.AllForeignTables,
    ...github.AllForeignTables,
    ...slack.AllForeignTables,
    ...trello.AllForeignTables,
    ...gitlab.AllForeignTables,
  ]
  export type AllViews = [
    ...voidpm.AllViews,
    ...github.AllViews,
    ...slack.AllViews,
    ...trello.AllViews,
    ...gitlab.AllViews,
  ]
  export type AllMaterializedViews = [
    ...voidpm.AllMaterializedViews,
    ...github.AllMaterializedViews,
    ...slack.AllMaterializedViews,
    ...trello.AllMaterializedViews,
    ...gitlab.AllMaterializedViews,
  ]
  export type AllTablesAndViews = [
    ...voidpm.AllTablesAndViews,
    ...github.AllTablesAndViews,
    ...slack.AllTablesAndViews,
    ...trello.AllTablesAndViews,
    ...gitlab.AllTablesAndViews,
  ]

  /* === lookups === */

  export type SelectableForTable<T extends Table> = {
    'voidpm.contributor': voidpm.contributor.Selectable
    'voidpm.organization': voidpm.organization.Selectable
    'voidpm.plan': voidpm.plan.Selectable
    'voidpm.pull_request': voidpm.pull_request.Selectable
    'voidpm.subscription': voidpm.subscription.Selectable
    'github.organization': github.organization.Selectable
    'github.repo': github.repo.Selectable
    'slack.workspace': slack.workspace.Selectable
    'trello.workspace': trello.workspace.Selectable
    'gitlab.app_user': gitlab.app_user.Selectable
    'gitlab.project': gitlab.project.Selectable
  }[T]

  export type JSONSelectableForTable<T extends Table> = {
    'voidpm.contributor': voidpm.contributor.JSONSelectable
    'voidpm.organization': voidpm.organization.JSONSelectable
    'voidpm.plan': voidpm.plan.JSONSelectable
    'voidpm.pull_request': voidpm.pull_request.JSONSelectable
    'voidpm.subscription': voidpm.subscription.JSONSelectable
    'github.organization': github.organization.JSONSelectable
    'github.repo': github.repo.JSONSelectable
    'slack.workspace': slack.workspace.JSONSelectable
    'trello.workspace': trello.workspace.JSONSelectable
    'gitlab.app_user': gitlab.app_user.JSONSelectable
    'gitlab.project': gitlab.project.JSONSelectable
  }[T]

  export type WhereableForTable<T extends Table> = {
    'voidpm.contributor': voidpm.contributor.Whereable
    'voidpm.organization': voidpm.organization.Whereable
    'voidpm.plan': voidpm.plan.Whereable
    'voidpm.pull_request': voidpm.pull_request.Whereable
    'voidpm.subscription': voidpm.subscription.Whereable
    'github.organization': github.organization.Whereable
    'github.repo': github.repo.Whereable
    'slack.workspace': slack.workspace.Whereable
    'trello.workspace': trello.workspace.Whereable
    'gitlab.app_user': gitlab.app_user.Whereable
    'gitlab.project': gitlab.project.Whereable
  }[T]

  export type InsertableForTable<T extends Table> = {
    'voidpm.contributor': voidpm.contributor.Insertable
    'voidpm.organization': voidpm.organization.Insertable
    'voidpm.plan': voidpm.plan.Insertable
    'voidpm.pull_request': voidpm.pull_request.Insertable
    'voidpm.subscription': voidpm.subscription.Insertable
    'github.organization': github.organization.Insertable
    'github.repo': github.repo.Insertable
    'slack.workspace': slack.workspace.Insertable
    'trello.workspace': trello.workspace.Insertable
    'gitlab.app_user': gitlab.app_user.Insertable
    'gitlab.project': gitlab.project.Insertable
  }[T]

  export type UpdatableForTable<T extends Table> = {
    'voidpm.contributor': voidpm.contributor.Updatable
    'voidpm.organization': voidpm.organization.Updatable
    'voidpm.plan': voidpm.plan.Updatable
    'voidpm.pull_request': voidpm.pull_request.Updatable
    'voidpm.subscription': voidpm.subscription.Updatable
    'github.organization': github.organization.Updatable
    'github.repo': github.repo.Updatable
    'slack.workspace': slack.workspace.Updatable
    'trello.workspace': trello.workspace.Updatable
    'gitlab.app_user': gitlab.app_user.Updatable
    'gitlab.project': gitlab.project.Updatable
  }[T]

  export type UniqueIndexForTable<T extends Table> = {
    'voidpm.contributor': voidpm.contributor.UniqueIndex
    'voidpm.organization': voidpm.organization.UniqueIndex
    'voidpm.plan': voidpm.plan.UniqueIndex
    'voidpm.pull_request': voidpm.pull_request.UniqueIndex
    'voidpm.subscription': voidpm.subscription.UniqueIndex
    'github.organization': github.organization.UniqueIndex
    'github.repo': github.repo.UniqueIndex
    'slack.workspace': slack.workspace.UniqueIndex
    'trello.workspace': trello.workspace.UniqueIndex
    'gitlab.app_user': gitlab.app_user.UniqueIndex
    'gitlab.project': gitlab.project.UniqueIndex
  }[T]

  export type ColumnForTable<T extends Table> = {
    'voidpm.contributor': voidpm.contributor.Column
    'voidpm.organization': voidpm.organization.Column
    'voidpm.plan': voidpm.plan.Column
    'voidpm.pull_request': voidpm.pull_request.Column
    'voidpm.subscription': voidpm.subscription.Column
    'github.organization': github.organization.Column
    'github.repo': github.repo.Column
    'slack.workspace': slack.workspace.Column
    'trello.workspace': trello.workspace.Column
    'gitlab.app_user': gitlab.app_user.Column
    'gitlab.project': gitlab.project.Column
  }[T]

  export type SQLForTable<T extends Table> = {
    'voidpm.contributor': voidpm.contributor.SQL
    'voidpm.organization': voidpm.organization.SQL
    'voidpm.plan': voidpm.plan.SQL
    'voidpm.pull_request': voidpm.pull_request.SQL
    'voidpm.subscription': voidpm.subscription.SQL
    'github.organization': github.organization.SQL
    'github.repo': github.repo.SQL
    'slack.workspace': slack.workspace.SQL
    'trello.workspace': trello.workspace.SQL
    'gitlab.app_user': gitlab.app_user.SQL
    'gitlab.project': gitlab.project.SQL
  }[T]
}
